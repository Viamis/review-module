# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # setting up mysql w/ root user and no password
      - image: circleci/node:8.11.3-browsers
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: reviews
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_PASSWORD:
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install mysql
          command: 'sudo apt install -y mysql-client' #allows for mysql command to work
      # Download and cache dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      - run: npm ci
      - save_cache:
          paths:
            - ./node_modules
          key: dependency-cache-{{ checksum "package.json" }}

      - run:
          name: MySQL database setup
          command: npm run create #creating database (schema.sql)

      - run:
          name: data creation
          command: npm run seed #generating random data

      - run:
        name: MySQL database population
        command: npm run populate #migrating random data to database

      - run:
        name: data aggregation
        command: npm run calculate #calculating product review aggregates via query + computation

      - run:
        name: MySQL database population w/ aggregates
        command: npm run aggregate #migrating aggregate data to database

      - run:
        name: server initialization
        command: npm run serve
        background: true

      # run tests!
      - run: npm run test
      